workflow:
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "web"'

variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: normal
  GLOBAL_CMAKE_OPTIONS: -DRDMNETBROKER_BUILD_TESTS=ON
  PROJECT_BOT_USER: project_1241_bot

windows-build:
  stage: build
  tags:
    - ct-windows
  parallel:
    matrix:
      - CMAKE_GENERATOR_OPTIONS: -A Win32
        CMAKE_INSTALL: install_x86
        VCVARSALL_PLATFORM: x86
        ARTIFACT_TYPE: x86
      - CMAKE_GENERATOR_OPTIONS: -A x64
        CMAKE_INSTALL: install_x64
        VCVARSALL_PLATFORM: amd64
        ARTIFACT_TYPE: x64
  script:
    - mkdir build
    - cd build
    - cmake -G "Visual Studio 16 2019" $env:CMAKE_GENERATOR_OPTIONS.Split(" ") "-DCMAKE_INSTALL_PREFIX=$env:CMAKE_INSTALL" $env:GLOBAL_CMAKE_OPTIONS.Split(" ") ..
    - cmake --build . --config Release -j
    - ctest -C Release --output-on-failure
    - cmake -P cmake_install.cmake
    - cd ..
    - .\tools\ci\windows_build_artifacts.bat
  artifacts:
    when: always
    paths:
      - RDMnetBroker_$ARTIFACT_TYPE.msi
      - RDMnetBroker_$ARTIFACT_TYPE.msm
    reports:
      junit: build/tests/test-results/*.xml

macos-build:
  stage: build
  tags:
    - ct-macos
  script:
    - mkdir build
    - cd build
    - cmake -DCMAKE_INSTALL_PREFIX=install ${GLOBAL_CMAKE_OPTIONS} ..
    - cmake --build .
    - cmake -P cmake_install.cmake
    - ctest --output-on-failure
    - cd ..
#    - python3 tools/install/macos/macos_build_package.py
  artifacts:
    when: always
#    paths:
#      - RDMnetBroker.pkg
    reports:
      junit: build/tests/test-results/*.xml

# Deploy versioned build
include:
  - project: 'etc/common-tech/tools/gitlab-ci-util'
    ref: v2.0.1
    file: '/ci-yml/deploy-versioned-build.yml'

deploy-artifacts:
  stage: deploy
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web" && $NEW_BUILD_VERSION =~ /^\d+\.\d+\.\d+\.\d+$/ && $CI_COMMIT_REF_NAME == "main"'
  tags:
    - etc-linux-docker
  image: etc-docker.artifactory.etcconnect.com/python:latest
  script:
    - pip install requests PyGithub
    - python3 tools/ci/deploy_to_github_release.py ${NEW_BUILD_VERSION}
